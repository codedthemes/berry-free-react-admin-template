{"version":3,"sources":["../../src/error/EntityNotFoundError.ts"],"names":[],"mappings":";;;AACA,iDAA6C;AAC7C,qDAAiD;AACjD,6DAAyD;AAEzD;;GAEG;AACH,MAAa,mBAAoB,SAAQ,2BAAY;IACjD,YAAY,WAA8B,EAAE,QAAa;QACrD,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,OAAO;YACR,sCAAsC,IAAI,CAAC,eAAe,CACtD,WAAW,CACd,IAAI,GAAG,aAAa,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAA;IAC/D,CAAC;IAEO,eAAe,CAAC,MAAyB;QAC7C,IAAI,iCAAe,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YACxC,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAA;SAC7B;aAAM,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YACrC,OAAO,MAAM,CAAC,IAAI,CAAA;SACrB;aAAM,IAAI,yBAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,MAAM,IAAK,MAAc,EAAE;YAClE,OAAQ,MAAc,CAAC,IAAI,CAAA;SAC9B;aAAM;YACH,OAAO,MAAa,CAAA;SACvB;IACL,CAAC;IAEO,iBAAiB,CAAC,QAAa;QACnC,IAAI;YACA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;SAC3C;QAAC,OAAO,CAAC,EAAE,GAAE;QACd,OAAO,EAAE,GAAG,QAAQ,CAAA;IACxB,CAAC;CACJ;AA5BD,kDA4BC","file":"EntityNotFoundError.js","sourcesContent":["import { EntityTarget } from \"../common/EntityTarget\"\nimport { TypeORMError } from \"./TypeORMError\"\nimport { ObjectUtils } from \"../util/ObjectUtils\"\nimport { InstanceChecker } from \"../util/InstanceChecker\"\n\n/**\n * Thrown when no result could be found in methods which are not allowed to return undefined or an empty set.\n */\nexport class EntityNotFoundError extends TypeORMError {\n    constructor(entityClass: EntityTarget<any>, criteria: any) {\n        super()\n\n        this.message =\n            `Could not find any entity of type \"${this.stringifyTarget(\n                entityClass,\n            )}\" ` + `matching: ${this.stringifyCriteria(criteria)}`\n    }\n\n    private stringifyTarget(target: EntityTarget<any>): string {\n        if (InstanceChecker.isEntitySchema(target)) {\n            return target.options.name\n        } else if (typeof target === \"function\") {\n            return target.name\n        } else if (ObjectUtils.isObject(target) && \"name\" in (target as any)) {\n            return (target as any).name\n        } else {\n            return target as any\n        }\n    }\n\n    private stringifyCriteria(criteria: any): string {\n        try {\n            return JSON.stringify(criteria, null, 4)\n        } catch (e) {}\n        return \"\" + criteria\n    }\n}\n"],"sourceRoot":".."}